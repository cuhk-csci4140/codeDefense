<!DOCTYPE html>
<html class="width-v1">
    <head>
        <title>{% block title %} {{environment.header.title}} {% endblock %}</title>
        <audio autoplay loop>
            <source src="johann_sebastian_bach_air.ogg">
        </audio

        <meta http-equiv="Content-Type" content="text/html; charset=utf-8">

        <script type="text/javascript" src="/js/createjs-2013.12.12.min.js"></script>

        <script type="text/javascript" src="/js/bundle.js"></script>
        <link href="/styles/style.css" media="all" rel="stylesheet"
              type="text/css" />

    </style>
    
    <link href='http://fonts.googleapis.com/css?family=Oswald' rel='stylesheet' type='text/css'>

    <script src="/js/popup.js"></script>
    <script src="/codemirror/codemirror.js"></script>
    <script src="/codemirror/placeholder.js"></script>
    <link rel="stylesheet" href="/codemirror/codemirror.css">
    <script src="/codemirror/javascript.js"></script>
    <script>
        var level = null;
        function stgSec(){
            if(game.activeLevel.bgm !== undefined && game.activeLevel.bgm !== null){
                game.activeLevel.bgm.stop();
            }
            Popup.showModal('stageSelection');
            document.getElementById('stageSelection').innerHTML =

            '<div style="position:absolute;background-image: url(/assets/gameobjects/bg/swordman_m.png);background-size: cover;bottom:0px;left:50px;height:100%;width:70%"></div>' +
            
            '<div class="gametitle"></div>' +


            '<input class="popupokbtn" style="left:25%;bottom:220px;width:50%" type="button" value="Endless Mode" onClick="game.setLevel(\'test\');level = \'Endless Mode\';Popup.hide(\'stageSelection\');$(\'#level\').html(level);">' +
            
            '<input class="popupokbtn" style="left:25%;bottom:170px;width:50%" type="button" value="Normal Mode" onClick="game.setLevel(\'stage1a\');level = \'Normal Mode\';Popup.hide(\'stageSelection\');$(\'#level\').html(level);">' +
            
            '<input class="popupokbtn" style="left:25%;bottom:120px;width:50%" type="button" value="Demo Level" onClick="game.setLevel(\'demo\');level = \'Demo Level\';Popup.hide(\'stageSelection\');$(\'#level\').html(level);">' +
            
            '<input class="popupokbtn" style="left:25%;bottom:70px;width:50%" type="button" value="Test Level" onClick="game.setLevel(\'test\');level = \'Test Level\';Popup.hide(\'stageSelection\');$(\'#level\').html(level);">';
            
            if(level !== null){
            document.getElementById('stageSelection').innerHTML += '<input class="popupokbtn" style="left:25%;bottom:20px;width:50%" type="button" value="Resume" onClick="resumeGame();">';
            }
        }
        


        var ctr = 0;
        var showctr = 0;
        var titleA = new Array();;
        var msgA = new Array();;
        
        function resumeGame(){
            Popup.hide('stageSelection');
            if(game.activeLevel.bgm !== undefined && game.activeLevel.bgm !== null){
                game.activeLevel.bgm.play();
            }
        }

        function showBox(title, msg) {
        
            if(title||msg){
            titleA[ctr] = title;
            msgA[ctr] = msg;
            ctr++;
            }
        }
        
        function popmsg(){
            
            if(typeof game !== "undefined" && game.activeLevel){
             $('#castRange').html(game.gameobjects.get('player').stats.castRange);
            }
            if(titleA[showctr]||msgA[showctr]){
                Popup.showModal('modal');

                title = '<div class="boxtitle">' + titleA[showctr] + '</div>';
                msg = '<div class="boxmsg">' + msgA[showctr] + '</div>';
                document.getElementById('modal').innerHTML = title + "<br>" + msg + '<input class="popupokbtn" type="button" value="OK" onClick="Popup.hide(\'modal\');showctr++;">';
                titleA[showctr] = null;
                msgA[showctr] = null;
            }
            setTimeout(popmsg, 500);
        }
        
        
        function endgamebox(title,msg){
                Popup.showModal('endgamediv');
                title = '<div class="boxtitle">' + title + '</div>';
                msg = '<div class="boxmsg">' + msg + '</div>';
                document.getElementById('endgamediv').innerHTML = title + "<br>" + msg + '<input class="popupokbtn" type="button" value="OK" onClick="Popup.hide(\'endgamediv\');level=null;stgSec();">';
        }
        
        function info(skill){
        
            switch (skill) {
            case "movement":
                title = "Movement";
                msg = '<img class="skill_thum" src="/assets/gameobjects/bg/movement.png"></img><br>this.move(x,y)<br>MP Cost: 0<br>Damage: 0';
                break;
            case "fireball":
                title = "Fireball";
                msg = '<img class="skill_thum" src="/assets/gameobjects/bg/fireball.png"></img><br>this.cast(new spells.Fireball());<br>MP Cost: 10<br>Damage: 2';
                break;
            case "firewall":

                title = "Fire Pillar";
                msg = '<img class="skill_thum" src="/assets/gameobjects/bg/firewall.png"></img><br>this.cast(new spells.Firewall(x,y));<br><span style="color:green">*Burn enemy*</span><br><span style="color:red">*Range limit*</span><br>MP Cost: 15<br>Damage: 3';
                break;
            case "thunderbolt":
                title = "Thunderblot";
                msg = '<img class="skill_thum" src="/assets/gameobjects/bg/thunderbolt.png"></img><br>this.cast(new spells.Thunderbolt(x,y));<br><span style="color:red">*Range limit*</span><br>MP Cost: 20<br>Damage: 5';
                break;
            case "pyroblast":
                title = "Pyroblast";
                msg = '<img class="skill_thum" src="/assets/gameobjects/bg/pyroblast.png"></img><br>this.cast(new spells.Pyroblast());<br><span style="color:green">*Range Damage*</span><br>MP Cost: 25<br>Damage: 8';
                break;
            case "meteor":
                title = "Meteor";
                msg = '<img class="skill_thum" src="/assets/gameobjects/bg/meteor.png"></img><br>this.cast(new spells.Meteor(x,y));<br><span style="color:red">*Range limit*</span><br>MP Cost: 2<br>Damage: 2';
                break; 
            case "icearrow":
                title = "Ice Arrow";
                msg = '<img class="skill_thum" src="/assets/gameobjects/bg/icearrow.png"></img><br>this.cast(new spells.Icearrow());<br>spells.Icearrow.prototype.scale( scale )<br><span style="color:green">*Penetration*</span><br>MP Cost: 10^(1 + scale*1.4/10)<br>Damage: 1';
                break;
            case "lightwall":
                title = "Lightwall";

                msg = '<img class="skill_thum" src="/assets/gameobjects/bg/lightwall.png"></img><br>this.cast(new spells.Lightwall(x,y));<br><span style="color:green">*Block enemy*</span><br><span style="color:red">*Range limit*</span><br>MP Cost: 10<br>Damage: 0';
                break;
            case "teleport":
                title = "Teleport";
                msg = '<img class="skill_thum" src="/assets/gameobjects/bg/teleport.png"></img><br>this.cast(new spells.Teleport(x,y,z (optional) ));<br> z : function(){ return spellObject;}<br>MP Cost: 10<br>Damage: 0';
                break;
            }
        
      
            
            
            
            
            Popup.showModal('skillinfo');
            title = '<div class="boxtitle">' + title + '</div>';
            msg = '<div class="boxmsg">' + msg + '</div>';
            document.getElementById('skillinfo').innerHTML = title + "<br>" + msg + '<input class="popupokbtn" type="button" value="OK" onClick="Popup.hide(\'skillinfo\');">';
        }

        function cast() {
            editor.save();
            var commandcast = document.getElementById('txtcodepanel');

            var lines = commandcast.value.split('\n');
            (function() {
                commandcast.value = " ";
                editor.setValue("");
                var i = 0;
                while (i < lines.length) {
                    eval(lines[i]);
                    i++;
                }
            }).apply(game.gameobjects.get('player'), []);

            

            game.gameobjects.get('player').triggerAction();
            

            }

        function resizePan() {

            var codePanHeight = (window.innerHeight - ($(".canvas-board").height()) - 25);
            var codePanWidth = ($(".canvas-board").width()+ 5);
            $(".CodeMirror").css("height", codePanHeight - 65 );
            $(".codepanel").css("width", codePanWidth);
            $(".CodeMirror-gutters").css("height", codePanHeight - 65 );


            $(".game-ui-h").css("height", ($(".canvas-board").height()+5));
            $(".cast-button").css("width", window.innerWidth * 0.7 - 40);

            $(".gameInfoPanel").css("height", codePanHeight - 20);
            $(".gameInfoPanel").css("top", $(".canvas-board").height()+25);
            $(".gameInfoPanel").css("width", window.innerWidth - ($(".canvas-board").width()) - 45);
            $(".game-ui-h").css("width", window.innerWidth - ($(".canvas-board").width()) - 25);
            $(".stg_button").css("width", window.innerWidth - ($(".canvas-board").width()) - 65);


            $(".top_index").css("width",($(".canvas-board").width()-70)/12)
            $(".left_index").css("height",($(".canvas-board").height()-35)/6)
            

            $(".codepanel").css("top",$(".canvas-board").height()+25);
            $(".game-ui-h").css("left", ($(".canvas-board").width()+25));
            $(".gameInfoPanel").css("left", ($(".canvas-board").width()+25));
            
            $("left_index").css("line-height", ($(".canvas-board").height()-35)/6)
            $(".deadline").css("left",($(".canvas-board").width()-70)/12+ 10)
        }
        
        (function($) {

    var resizeTimer; // Set resizeTimer to empty so it resets on page load

    function resizeFunction() {
        // Stuff that should happen on resize
    };

    // On resize, run the function and reset the timeout
    // 250 is the delay in milliseconds. Change as you see fit.
    $(window).resize(function() {
        clearTimeout(resizeTimer);
        resizePan();
        resizeTimer = setTimeout(resizeFunction, 1000);
    });

})(jQuery);


function startgame(){
            resizePan();

            if(level === null){
                stgSec();
            }
        }
        

    </script>

</head>
<body>
    {% block body %}
        <div class="body box home">
            <div class="content">
                <div class="header">
                    <div class="content">
                        <h1>Title/h1>
                            <div class="subtitle">Description</div>

                    </div>
                    <div class="bottom_bar"></div></div>
            </div>
        </div>
    {% endblock %}

    <div id="modal" class="PopupDiv"></div>
    <div id="stageSelection" class="stageSelectionDiv"></div>
    <div id="endgamediv" class="PopupDiv"></div>
    <div id="skillinfo" class="skillinfo"><div>

    <script type="text/javascript">
        var editor = CodeMirror.fromTextArea(txtcodepanel, {
            mode: "text/javascript",
            lineNumbers: true,
            autofocus: true
        });
        window.onload = startgame;

popmsg();

    </script>

</body>
</html>
